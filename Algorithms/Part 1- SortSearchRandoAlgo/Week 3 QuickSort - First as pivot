firstcount = 0

def quicksortfirst (array,l,r):
    if l == r or l >= r:
        return array
    else:
        array,i = partitionfirst(array,l,r)
        #print "sort left"
        array = quicksortfirst(array,l,i-2)
        #print "sort right"
        array = quicksortfirst(array,i,r)
    return array

def partitionfirst (array,l,r):
    #print "l is {} r is {}".format(l,r)
    p = array[l]
    global firstcount
    #print "array length is from {} to {}".format(l,r)
    firstcount = firstcount + r - l
    #print "first count is {}".format(firstcount)
    i = l + 1
    for j in range((l+1),r+1):
        if int(array[j]) < int(p):
            #print " {} is less than {}".format(array[j],p)
            array = swapfirst(array,j,i)
            #print array
            i += 1
            #print "i is {}".format(i)
        j += 1
    #final swap pivot with (i-1)
    array = swapfirst(array,l,(i-1))
    #print array,i,"l and r are",l,r
    return array,i

def swapfirst (array,j,i):
    array[j], array[i] = array[i], array[j]
    return array

def first_counted ():
    return firstcount
